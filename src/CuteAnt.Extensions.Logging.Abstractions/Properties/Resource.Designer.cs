// <auto-generated />
namespace CuteAnt.Extensions.Logging.Abstractions
{
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    internal static class Resource
    {
        private static readonly ResourceManager _resourceManager
#if NET40
            = new ResourceManager("CuteAnt.Extensions.Logging.Abstractions.Resource", typeof(Resource).Assembly);
#else
            = new ResourceManager("CuteAnt.Extensions.Logging.Abstractions.Resource", typeof(Resource).GetTypeInfo().Assembly);
#endif

    /// <summary>
    /// The format string '{0}' does not have the expected number of named parameters. Expected {1} parameter(s) but found {2} parameter(s).
    /// </summary>
    internal static string UnexpectedNumberOfNamedParameters
        {
            get { return GetString("UnexpectedNumberOfNamedParameters"); }
        }

        /// <summary>
        /// The format string '{0}' does not have the expected number of named parameters. Expected {1} parameter(s) but found {2} parameter(s).
        /// </summary>
        internal static string FormatUnexpectedNumberOfNamedParameters(object p0, object p1, object p2)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("UnexpectedNumberOfNamedParameters"), p0, p1, p2);
        }

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            System.Diagnostics.Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
